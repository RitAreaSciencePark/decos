# Generated by Django 5.0.7 on 2024-07-31 09:43

import PRP_CDM_app.models
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('PRP_CDM_app', '0021_alter_administration_uuid_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Instruments',
            fields=[
                ('instrument_id', models.CharField(max_length=37, primary_key=True, serialize=False)),
                ('vendor', models.CharField(max_length=50)),
                ('model', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=50)),
            ],
            options={
                'db_table': 'instruments',
            },
        ),
        migrations.CreateModel(
            name='InstrumentXTechnique',
            fields=[
                ('x_id', models.CharField(max_length=37, primary_key=True, serialize=False)),
                ('instrument_id', models.CharField(max_length=37)),
                ('technique_id', models.CharField(max_length=37)),
            ],
            options={
                'db_table': 'instrument_x_technique',
            },
        ),
        migrations.CreateModel(
            name='Laboratories',
            fields=[
                ('lab_id', models.CharField(max_length=37, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'laboratories',
            },
        ),
        migrations.CreateModel(
            name='LabXInstrument',
            fields=[
                ('x_id', models.CharField(max_length=37, primary_key=True, serialize=False)),
                ('lab_id', models.CharField(max_length=37)),
                ('instrument_id', models.CharField(max_length=37)),
            ],
            options={
                'db_table': 'lab_x_instrument',
            },
        ),
        migrations.CreateModel(
            name='LageSamples',
            fields=[
                ('sample_id', models.CharField(max_length=37, primary_key=True, serialize=False)),
                ('is_volume_in_ul', models.CharField(blank=True)),
                ('is_buffer_used', models.CharField(blank=True)),
                ('is_quality', models.CharField(blank=True)),
                ('sample_date_of_delivery', models.DateField()),
                ('sample_back', models.BooleanField()),
                ('reagents_provided_by_client', models.BooleanField()),
                ('reagents_date_of_delivery', models.DateField(blank=True)),
                ('sample_sheet_filename', models.FileField(blank=True, upload_to=PRP_CDM_app.models.LageSamples.user_directory_path)),
                ('additional_filename', models.FileField(blank=True, upload_to=PRP_CDM_app.models.LageSamples.user_directory_path)),
            ],
            options={
                'db_table': 'lage_samples',
            },
        ),
        migrations.CreateModel(
            name='Questions',
            fields=[
                ('question_id', models.CharField(max_length=37, primary_key=True, serialize=False)),
                ('sr_id', models.CharField(max_length=37)),
                ('question', models.TextField(blank=True, max_length=500)),
                ('answer', models.TextField(blank=True, max_length=500)),
            ],
            options={
                'db_table': 'questions',
            },
        ),
        migrations.CreateModel(
            name='Samples',
            fields=[
                ('sample_id', models.CharField(max_length=37, primary_key=True, serialize=False)),
                ('sr_id', models.CharField(max_length=37)),
                ('type', models.CharField(blank=True)),
                ('sample_description', models.TextField(blank=True, max_length=500)),
            ],
            options={
                'db_table': 'samples',
            },
        ),
        migrations.CreateModel(
            name='ServiceRequests',
            fields=[
                ('sr_id', models.CharField(max_length=37, primary_key=True, serialize=False)),
                ('user_id', models.CharField(max_length=37)),
                ('lab_id', models.CharField(max_length=37)),
                ('sr_status', models.CharField(default='draft')),
                ('sr_feasibility', models.CharField(blank=True)),
                ('exp_description', models.TextField(blank=True, max_length=500)),
                ('output_delivery_date', models.DateField(blank=True)),
            ],
            options={
                'db_table': 'service_requests',
            },
        ),
        migrations.CreateModel(
            name='Steps',
            fields=[
                ('step_id', models.CharField(max_length=37, primary_key=True, serialize=False)),
                ('sr_id', models.CharField(max_length=37)),
                ('instrument_id', models.CharField(max_length=37)),
                ('technique_id', models.CharField(max_length=37)),
                ('assigned_uoa', models.IntegerField()),
                ('performed_uoa', models.IntegerField(default=0)),
                ('eff_sample_date_of_delivery', models.DateField()),
                ('eff_reagents_date_of_delivery', models.DateField()),
                ('sample_quality', models.CharField(blank=True)),
                ('sample_quality_description', models.TextField(blank=True, max_length=500)),
                ('sample_quality_extra_budjet', models.BooleanField(blank=True)),
            ],
            options={
                'db_table': 'steps',
            },
        ),
        migrations.CreateModel(
            name='Techniques',
            fields=[
                ('technique_id', models.CharField(max_length=37, primary_key=True, serialize=False)),
                ('technique_name', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=50)),
            ],
            options={
                'db_table': 'techniques',
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('user_id', models.CharField(max_length=37, primary_key=True, serialize=False)),
                ('name_surname', models.CharField(max_length=50)),
                ('email', models.CharField(max_length=128)),
                ('affiliation', models.CharField(max_length=128)),
                ('gender', models.CharField(blank=True)),
                ('legal_status', models.CharField(blank=True)),
                ('research_role', models.CharField(blank=True)),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.DeleteModel(
            name='CustomAppModel',
        ),
        migrations.RenameField(
            model_name='administration',
            old_name='datausername',
            new_name='lab_id',
        ),
        migrations.RenameField(
            model_name='administration',
            old_name='labname',
            new_name='user_id',
        ),
        migrations.RenameField(
            model_name='labdmp',
            old_name='labname',
            new_name='lab_id',
        ),
        migrations.RenameField(
            model_name='labdmp',
            old_name='datausername',
            new_name='user_id',
        ),
        migrations.RenameField(
            model_name='lagesample',
            old_name='datausername',
            new_name='user_id',
        ),
        migrations.RemoveField(
            model_name='administration',
            name='uuid',
        ),
        migrations.RemoveField(
            model_name='lagesample',
            name='uuid',
        ),
        migrations.AddField(
            model_name='administration',
            name='sr_id',
            field=models.CharField(default=uuid.UUID('87f0b482-3aeb-4c9e-9639-06b29dbe21d3'), max_length=37, primary_key=True, serialize=False),
        ),
        migrations.AddField(
            model_name='lagesample',
            name='sr_id',
            field=models.CharField(default=uuid.UUID('61759264-5665-453f-8183-1123c6d0b169'), max_length=37, primary_key=True, serialize=False),
        ),
    ]
